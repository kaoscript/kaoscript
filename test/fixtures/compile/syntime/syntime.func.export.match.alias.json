[
  {
    "aliens": [
      "Any?",
      "console",
      true
    ],
    "requirements": [],
    "references": []
  },
  {
    "exports": [],
    "references": [],
    "macros": [
      "mt",
      [
        "eyJwYXJhbWV0ZXJzIjpbeyJraW5kIjo4MiwiYXR0cmlidXRlcyI6W10sIm1vZGlmaWVycyI6W10sImV4dGVybmFsIjp7ImtpbmQiOjQ3LCJtb2RpZmllcnMiOltdLCJuYW1lIjoiaSIsInN0YXJ0Ijp7ImxpbmUiOjEsImNvbHVtbiI6Mjd9LCJlbmQiOnsibGluZSI6MSwiY29sdW1uIjoyOH19LCJpbnRlcm5hbCI6eyJraW5kIjo0NywibW9kaWZpZXJzIjpbXSwibmFtZSI6ImkiLCJzdGFydCI6eyJsaW5lIjoxLCJjb2x1bW4iOjI3fSwiZW5kIjp7ImxpbmUiOjEsImNvbHVtbiI6Mjh9fSwidHlwZSI6eyJraW5kIjoxMjcsIm1vZGlmaWVycyI6W10sInR5cGVOYW1lIjp7ImtpbmQiOjQ3LCJtb2RpZmllcnMiOltdLCJuYW1lIjoiQXN0Iiwic3RhcnQiOnsibGluZSI6MSwiY29sdW1uIjozMH0sImVuZCI6eyJsaW5lIjoxLCJjb2x1bW4iOjMzfX0sInR5cGVTdWJ0eXBlcyI6W3sia2luZCI6NDcsIm1vZGlmaWVycyI6W10sIm5hbWUiOiJJZGVudGlmaWVyIiwic3RhcnQiOnsibGluZSI6MSwiY29sdW1uIjozNH0sImVuZCI6eyJsaW5lIjoxLCJjb2x1bW4iOjQ0fX1dLCJzdGFydCI6eyJsaW5lIjoxLCJjb2x1bW4iOjMwfSwiZW5kIjp7ImxpbmUiOjEsImNvbHVtbiI6NDV9fSwic3RhcnQiOnsibGluZSI6MSwiY29sdW1uIjoyN30sImVuZCI6eyJsaW5lIjoxLCJjb2x1bW4iOjQ1fX1dLCJzb3VyY2UiOiIvLyBHZW5lcmF0ZWQgYnkga2Fvc2NyaXB0IDAuMTEuMFxuY29uc3Qge0hlbHBlciwgVHlwZX0gPSByZXF1aXJlKFwiQGthb3NjcmlwdC9ydW50aW1lXCIpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihfX2tzX01hcmtlciwgUG9zaXRpb24sIFJhbmdlLCBWZXJzaW9uRGF0YSwgTW9kaWZpZXJLaW5kLCBNb2RpZmllckRhdGEsIEFzdEtpbmQsIEFzdCwgT3BlcmF0b3JBdHRyaWJ1dGUsIE9wZXJhdG9yS2luZCwgSXRlcmF0aW9uS2luZCwgUmVzdHJpY3RpdmVPcGVyYXRvcktpbmQsIFVuYXJ5VHlwZU9wZXJhdG9yS2luZCwgQXNzaWdubWVudE9wZXJhdG9yS2luZCwgQmluYXJ5T3BlcmF0b3JLaW5kLCBVbmFyeU9wZXJhdG9yS2luZCwgQmluYXJ5T3BlcmF0b3JEYXRhLCBJdGVyYXRpb25EYXRhLCBSZXN0cmljdGl2ZU9wZXJhdG9yRGF0YSwgVW5hcnlPcGVyYXRvckRhdGEsIFVuYXJ5VHlwZU9wZXJhdG9yRGF0YSwgUXVvdGVFbGVtZW50S2luZCwgUmVpZmljYXRpb25LaW5kLCBRdW90ZUVsZW1lbnREYXRhLCBSZWlmaWNhdGlvbkRhdGEsIFNjb3BlS2luZCwgU2NvcGVEYXRhKSB7XG5cdHZhciBfX2tzXzBfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoUG9zaXRpb24pO1xuXHR2YXIgX19rc18xX3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKFJhbmdlKTtcblx0dmFyIF9fa3NfMl92YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShWZXJzaW9uRGF0YSk7XG5cdHZhciBfX2tzXzNfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoTW9kaWZpZXJLaW5kKTtcblx0dmFyIF9fa3NfNF92YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShNb2RpZmllckRhdGEpO1xuXHR2YXIgX19rc181X3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKEFzdEtpbmQpO1xuXHR2YXIgX19rc182X3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKEFzdCk7XG5cdHZhciBfX2tzXzdfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoT3BlcmF0b3JBdHRyaWJ1dGUpO1xuXHR2YXIgX19rc184X3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKE9wZXJhdG9yS2luZCk7XG5cdHZhciBfX2tzXzlfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoSXRlcmF0aW9uS2luZCk7XG5cdHZhciBfX2tzXzEwX3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKFJlc3RyaWN0aXZlT3BlcmF0b3JLaW5kKTtcblx0dmFyIF9fa3NfMTFfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoVW5hcnlUeXBlT3BlcmF0b3JLaW5kKTtcblx0dmFyIF9fa3NfMTJfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoQXNzaWdubWVudE9wZXJhdG9yS2luZCk7XG5cdHZhciBfX2tzXzEzX3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKEJpbmFyeU9wZXJhdG9yS2luZCk7XG5cdHZhciBfX2tzXzE0X3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKFVuYXJ5T3BlcmF0b3JLaW5kKTtcblx0dmFyIF9fa3NfMTVfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoQmluYXJ5T3BlcmF0b3JEYXRhKTtcblx0dmFyIF9fa3NfMTZfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoSXRlcmF0aW9uRGF0YSk7XG5cdHZhciBfX2tzXzE3X3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKFJlc3RyaWN0aXZlT3BlcmF0b3JEYXRhKTtcblx0dmFyIF9fa3NfMThfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoVW5hcnlPcGVyYXRvckRhdGEpO1xuXHR2YXIgX19rc18xOV92YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShVbmFyeVR5cGVPcGVyYXRvckRhdGEpO1xuXHR2YXIgX19rc18yMF92YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShRdW90ZUVsZW1lbnRLaW5kKTtcblx0dmFyIF9fa3NfMjFfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoUmVpZmljYXRpb25LaW5kKTtcblx0dmFyIF9fa3NfMjJfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoUXVvdGVFbGVtZW50RGF0YSk7XG5cdHZhciBfX2tzXzIzX3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKFJlaWZpY2F0aW9uRGF0YSk7XG5cdHZhciBfX2tzXzI0X3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKFNjb3BlS2luZCk7XG5cdHZhciBfX2tzXzI1X3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKFNjb3BlRGF0YSk7XG5cdGlmKCFfX2tzXzBfdmFsdWFibGUgJiYgIV9fa3NfMV92YWx1YWJsZSAmJiAhX19rc18yX3ZhbHVhYmxlICYmICFfX2tzXzNfdmFsdWFibGUgJiYgIV9fa3NfNF92YWx1YWJsZSAmJiAhX19rc181X3ZhbHVhYmxlICYmICFfX2tzXzZfdmFsdWFibGUgJiYgIV9fa3NfN192YWx1YWJsZSAmJiAhX19rc184X3ZhbHVhYmxlICYmICFfX2tzXzlfdmFsdWFibGUgJiYgIV9fa3NfMTBfdmFsdWFibGUgJiYgIV9fa3NfMTFfdmFsdWFibGUgJiYgIV9fa3NfMTJfdmFsdWFibGUgJiYgIV9fa3NfMTNfdmFsdWFibGUgJiYgIV9fa3NfMTRfdmFsdWFibGUgJiYgIV9fa3NfMTVfdmFsdWFibGUgJiYgIV9fa3NfMTZfdmFsdWFibGUgJiYgIV9fa3NfMTdfdmFsdWFibGUgJiYgIV9fa3NfMThfdmFsdWFibGUgJiYgIV9fa3NfMTlfdmFsdWFibGUgJiYgIV9fa3NfMjBfdmFsdWFibGUgJiYgIV9fa3NfMjFfdmFsdWFibGUgJiYgIV9fa3NfMjJfdmFsdWFibGUgJiYgIV9fa3NfMjNfdmFsdWFibGUgJiYgIV9fa3NfMjRfdmFsdWFibGUgJiYgIV9fa3NfMjVfdmFsdWFibGUpIHtcblx0XHR2YXIge1Bvc2l0aW9uLCBSYW5nZSwgVmVyc2lvbkRhdGEsIE1vZGlmaWVyS2luZCwgTW9kaWZpZXJEYXRhLCBBc3RLaW5kLCBBc3QsIE9wZXJhdG9yQXR0cmlidXRlLCBPcGVyYXRvcktpbmQsIEl0ZXJhdGlvbktpbmQsIFJlc3RyaWN0aXZlT3BlcmF0b3JLaW5kLCBVbmFyeVR5cGVPcGVyYXRvcktpbmQsIEFzc2lnbm1lbnRPcGVyYXRvcktpbmQsIEJpbmFyeU9wZXJhdG9yS2luZCwgVW5hcnlPcGVyYXRvcktpbmQsIEJpbmFyeU9wZXJhdG9yRGF0YSwgSXRlcmF0aW9uRGF0YSwgUmVzdHJpY3RpdmVPcGVyYXRvckRhdGEsIFVuYXJ5T3BlcmF0b3JEYXRhLCBVbmFyeVR5cGVPcGVyYXRvckRhdGEsIFF1b3RlRWxlbWVudEtpbmQsIFJlaWZpY2F0aW9uS2luZCwgUXVvdGVFbGVtZW50RGF0YSwgUmVpZmljYXRpb25EYXRhLCBTY29wZUtpbmQsIFNjb3BlRGF0YX0gPSByZXF1aXJlKFwiQGthb3NjcmlwdC9hc3Qvc3JjLy5pbmRleC5rcy5qNWs4cjkua3NiXCIpKCk7XG5cdH1cblx0ZWxzZSBpZighKF9fa3NfMF92YWx1YWJsZSB8fCBfX2tzXzFfdmFsdWFibGUgfHwgX19rc18yX3ZhbHVhYmxlIHx8IF9fa3NfM192YWx1YWJsZSB8fCBfX2tzXzRfdmFsdWFibGUgfHwgX19rc181X3ZhbHVhYmxlIHx8IF9fa3NfNl92YWx1YWJsZSB8fCBfX2tzXzdfdmFsdWFibGUgfHwgX19rc184X3ZhbHVhYmxlIHx8IF9fa3NfOV92YWx1YWJsZSB8fCBfX2tzXzEwX3ZhbHVhYmxlIHx8IF9fa3NfMTFfdmFsdWFibGUgfHwgX19rc18xMl92YWx1YWJsZSB8fCBfX2tzXzEzX3ZhbHVhYmxlIHx8IF9fa3NfMTRfdmFsdWFibGUgfHwgX19rc18xNV92YWx1YWJsZSB8fCBfX2tzXzE2X3ZhbHVhYmxlIHx8IF9fa3NfMTdfdmFsdWFibGUgfHwgX19rc18xOF92YWx1YWJsZSB8fCBfX2tzXzE5X3ZhbHVhYmxlIHx8IF9fa3NfMjBfdmFsdWFibGUgfHwgX19rc18yMV92YWx1YWJsZSB8fCBfX2tzXzIyX3ZhbHVhYmxlIHx8IF9fa3NfMjNfdmFsdWFibGUgfHwgX19rc18yNF92YWx1YWJsZSB8fCBfX2tzXzI1X3ZhbHVhYmxlKSkge1xuXHRcdHRocm93IEhlbHBlci5iYWRSZXF1aXJlbWVudHMoKTtcblx0fVxuXHRjb25zdCBFdmFsdWF0b3IgPSBIZWxwZXIuYWxpYXMoVHlwZS5pc0Z1bmN0aW9uKTtcblx0Y29uc3QgUmVpZmljYXRvciA9IEhlbHBlci5hbGlhcyhUeXBlLmlzRnVuY3Rpb24pO1xuXHRmdW5jdGlvbiBfX2tzTWFpbigpIHtcblx0XHRyZXR1cm4gX19rc01haW4uX19rc19ydCh0aGlzLCBhcmd1bWVudHMpO1xuXHR9O1xuXHRfX2tzTWFpbi5fX2tzXzAgPSBmdW5jdGlvbihldmFsLCBfX2tzX3JlaWZpY2F0ZSwgaSkge1xuXHRcdGxldCBfX2tzX3NyYyA9IFwiXCI7XG5cdFx0X19rc19zcmMgKz0gXCInZ290IGFuIGlkZW50aWZpZXInXCI7XG5cdFx0cmV0dXJuIF9fa3Nfc3JjO1xuXHR9O1xuXHRfX2tzTWFpbi5fX2tzX3J0ID0gZnVuY3Rpb24odGhhdCwgYXJncykge1xuXHRcdGNvbnN0IHQwID0gVHlwZS5pc0Z1bmN0aW9uO1xuXHRcdGNvbnN0IHQxID0gVHlwZS5pc0Z1bmN0aW9uO1xuXHRcdGNvbnN0IHQyID0gVHlwZS5pc1ZhbHVlO1xuXHRcdGlmKGFyZ3MubGVuZ3RoID09PSAzKSB7XG5cdFx0XHRpZih0MChhcmdzWzBdKSAmJiB0MShhcmdzWzFdKSAmJiB0MihhcmdzWzJdKSkge1xuXHRcdFx0XHRyZXR1cm4gX19rc01haW4uX19rc18wLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHRocm93IEhlbHBlci5iYWRBcmdzKCk7XG5cdH07XG5cdHJldHVybiB7XG5cdFx0X19rc01haW5cblx0fTtcbn07In0=",
        "eyJwYXJhbWV0ZXJzIjpbeyJraW5kIjo4MiwiYXR0cmlidXRlcyI6W10sIm1vZGlmaWVycyI6W3sia2luZCI6MzcsImFyaXR5Ijp7Im1pbiI6MCwibWF4IjpudWxsfSwic3RhcnQiOnsibGluZSI6MiwiY29sdW1uIjoyN30sImVuZCI6eyJsaW5lIjoyLCJjb2x1bW4iOjMwfX1dLCJleHRlcm5hbCI6eyJraW5kIjo0NywibW9kaWZpZXJzIjpbXSwibmFtZSI6Im90aGVycyIsInN0YXJ0Ijp7ImxpbmUiOjIsImNvbHVtbiI6MzB9LCJlbmQiOnsibGluZSI6MiwiY29sdW1uIjozNn19LCJpbnRlcm5hbCI6eyJraW5kIjo0NywibW9kaWZpZXJzIjpbXSwibmFtZSI6Im90aGVycyIsInN0YXJ0Ijp7ImxpbmUiOjIsImNvbHVtbiI6MzB9LCJlbmQiOnsibGluZSI6MiwiY29sdW1uIjozNn19LCJzdGFydCI6eyJsaW5lIjoyLCJjb2x1bW4iOjI3fSwiZW5kIjp7ImxpbmUiOjIsImNvbHVtbiI6MzZ9fV0sInNvdXJjZSI6Ii8vIEdlbmVyYXRlZCBieSBrYW9zY3JpcHQgMC4xMS4wXG5jb25zdCB7SGVscGVyLCBUeXBlfSA9IHJlcXVpcmUoXCJAa2Fvc2NyaXB0L3J1bnRpbWVcIik7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKF9fa3NfTWFya2VyLCBQb3NpdGlvbiwgUmFuZ2UsIFZlcnNpb25EYXRhLCBNb2RpZmllcktpbmQsIE1vZGlmaWVyRGF0YSwgQXN0S2luZCwgQXN0LCBPcGVyYXRvckF0dHJpYnV0ZSwgT3BlcmF0b3JLaW5kLCBJdGVyYXRpb25LaW5kLCBSZXN0cmljdGl2ZU9wZXJhdG9yS2luZCwgVW5hcnlUeXBlT3BlcmF0b3JLaW5kLCBBc3NpZ25tZW50T3BlcmF0b3JLaW5kLCBCaW5hcnlPcGVyYXRvcktpbmQsIFVuYXJ5T3BlcmF0b3JLaW5kLCBCaW5hcnlPcGVyYXRvckRhdGEsIEl0ZXJhdGlvbkRhdGEsIFJlc3RyaWN0aXZlT3BlcmF0b3JEYXRhLCBVbmFyeU9wZXJhdG9yRGF0YSwgVW5hcnlUeXBlT3BlcmF0b3JEYXRhLCBRdW90ZUVsZW1lbnRLaW5kLCBSZWlmaWNhdGlvbktpbmQsIFF1b3RlRWxlbWVudERhdGEsIFJlaWZpY2F0aW9uRGF0YSwgU2NvcGVLaW5kLCBTY29wZURhdGEpIHtcblx0dmFyIF9fa3NfMF92YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShQb3NpdGlvbik7XG5cdHZhciBfX2tzXzFfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoUmFuZ2UpO1xuXHR2YXIgX19rc18yX3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKFZlcnNpb25EYXRhKTtcblx0dmFyIF9fa3NfM192YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShNb2RpZmllcktpbmQpO1xuXHR2YXIgX19rc180X3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKE1vZGlmaWVyRGF0YSk7XG5cdHZhciBfX2tzXzVfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoQXN0S2luZCk7XG5cdHZhciBfX2tzXzZfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoQXN0KTtcblx0dmFyIF9fa3NfN192YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShPcGVyYXRvckF0dHJpYnV0ZSk7XG5cdHZhciBfX2tzXzhfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoT3BlcmF0b3JLaW5kKTtcblx0dmFyIF9fa3NfOV92YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShJdGVyYXRpb25LaW5kKTtcblx0dmFyIF9fa3NfMTBfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoUmVzdHJpY3RpdmVPcGVyYXRvcktpbmQpO1xuXHR2YXIgX19rc18xMV92YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShVbmFyeVR5cGVPcGVyYXRvcktpbmQpO1xuXHR2YXIgX19rc18xMl92YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShBc3NpZ25tZW50T3BlcmF0b3JLaW5kKTtcblx0dmFyIF9fa3NfMTNfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoQmluYXJ5T3BlcmF0b3JLaW5kKTtcblx0dmFyIF9fa3NfMTRfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoVW5hcnlPcGVyYXRvcktpbmQpO1xuXHR2YXIgX19rc18xNV92YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShCaW5hcnlPcGVyYXRvckRhdGEpO1xuXHR2YXIgX19rc18xNl92YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShJdGVyYXRpb25EYXRhKTtcblx0dmFyIF9fa3NfMTdfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoUmVzdHJpY3RpdmVPcGVyYXRvckRhdGEpO1xuXHR2YXIgX19rc18xOF92YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShVbmFyeU9wZXJhdG9yRGF0YSk7XG5cdHZhciBfX2tzXzE5X3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKFVuYXJ5VHlwZU9wZXJhdG9yRGF0YSk7XG5cdHZhciBfX2tzXzIwX3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKFF1b3RlRWxlbWVudEtpbmQpO1xuXHR2YXIgX19rc18yMV92YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShSZWlmaWNhdGlvbktpbmQpO1xuXHR2YXIgX19rc18yMl92YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShRdW90ZUVsZW1lbnREYXRhKTtcblx0dmFyIF9fa3NfMjNfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoUmVpZmljYXRpb25EYXRhKTtcblx0dmFyIF9fa3NfMjRfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoU2NvcGVLaW5kKTtcblx0dmFyIF9fa3NfMjVfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoU2NvcGVEYXRhKTtcblx0aWYoIV9fa3NfMF92YWx1YWJsZSAmJiAhX19rc18xX3ZhbHVhYmxlICYmICFfX2tzXzJfdmFsdWFibGUgJiYgIV9fa3NfM192YWx1YWJsZSAmJiAhX19rc180X3ZhbHVhYmxlICYmICFfX2tzXzVfdmFsdWFibGUgJiYgIV9fa3NfNl92YWx1YWJsZSAmJiAhX19rc183X3ZhbHVhYmxlICYmICFfX2tzXzhfdmFsdWFibGUgJiYgIV9fa3NfOV92YWx1YWJsZSAmJiAhX19rc18xMF92YWx1YWJsZSAmJiAhX19rc18xMV92YWx1YWJsZSAmJiAhX19rc18xMl92YWx1YWJsZSAmJiAhX19rc18xM192YWx1YWJsZSAmJiAhX19rc18xNF92YWx1YWJsZSAmJiAhX19rc18xNV92YWx1YWJsZSAmJiAhX19rc18xNl92YWx1YWJsZSAmJiAhX19rc18xN192YWx1YWJsZSAmJiAhX19rc18xOF92YWx1YWJsZSAmJiAhX19rc18xOV92YWx1YWJsZSAmJiAhX19rc18yMF92YWx1YWJsZSAmJiAhX19rc18yMV92YWx1YWJsZSAmJiAhX19rc18yMl92YWx1YWJsZSAmJiAhX19rc18yM192YWx1YWJsZSAmJiAhX19rc18yNF92YWx1YWJsZSAmJiAhX19rc18yNV92YWx1YWJsZSkge1xuXHRcdHZhciB7UG9zaXRpb24sIFJhbmdlLCBWZXJzaW9uRGF0YSwgTW9kaWZpZXJLaW5kLCBNb2RpZmllckRhdGEsIEFzdEtpbmQsIEFzdCwgT3BlcmF0b3JBdHRyaWJ1dGUsIE9wZXJhdG9yS2luZCwgSXRlcmF0aW9uS2luZCwgUmVzdHJpY3RpdmVPcGVyYXRvcktpbmQsIFVuYXJ5VHlwZU9wZXJhdG9yS2luZCwgQXNzaWdubWVudE9wZXJhdG9yS2luZCwgQmluYXJ5T3BlcmF0b3JLaW5kLCBVbmFyeU9wZXJhdG9yS2luZCwgQmluYXJ5T3BlcmF0b3JEYXRhLCBJdGVyYXRpb25EYXRhLCBSZXN0cmljdGl2ZU9wZXJhdG9yRGF0YSwgVW5hcnlPcGVyYXRvckRhdGEsIFVuYXJ5VHlwZU9wZXJhdG9yRGF0YSwgUXVvdGVFbGVtZW50S2luZCwgUmVpZmljYXRpb25LaW5kLCBRdW90ZUVsZW1lbnREYXRhLCBSZWlmaWNhdGlvbkRhdGEsIFNjb3BlS2luZCwgU2NvcGVEYXRhfSA9IHJlcXVpcmUoXCJAa2Fvc2NyaXB0L2FzdC9zcmMvLmluZGV4LmtzLmo1azhyOS5rc2JcIikoKTtcblx0fVxuXHRlbHNlIGlmKCEoX19rc18wX3ZhbHVhYmxlIHx8IF9fa3NfMV92YWx1YWJsZSB8fCBfX2tzXzJfdmFsdWFibGUgfHwgX19rc18zX3ZhbHVhYmxlIHx8IF9fa3NfNF92YWx1YWJsZSB8fCBfX2tzXzVfdmFsdWFibGUgfHwgX19rc182X3ZhbHVhYmxlIHx8IF9fa3NfN192YWx1YWJsZSB8fCBfX2tzXzhfdmFsdWFibGUgfHwgX19rc185X3ZhbHVhYmxlIHx8IF9fa3NfMTBfdmFsdWFibGUgfHwgX19rc18xMV92YWx1YWJsZSB8fCBfX2tzXzEyX3ZhbHVhYmxlIHx8IF9fa3NfMTNfdmFsdWFibGUgfHwgX19rc18xNF92YWx1YWJsZSB8fCBfX2tzXzE1X3ZhbHVhYmxlIHx8IF9fa3NfMTZfdmFsdWFibGUgfHwgX19rc18xN192YWx1YWJsZSB8fCBfX2tzXzE4X3ZhbHVhYmxlIHx8IF9fa3NfMTlfdmFsdWFibGUgfHwgX19rc18yMF92YWx1YWJsZSB8fCBfX2tzXzIxX3ZhbHVhYmxlIHx8IF9fa3NfMjJfdmFsdWFibGUgfHwgX19rc18yM192YWx1YWJsZSB8fCBfX2tzXzI0X3ZhbHVhYmxlIHx8IF9fa3NfMjVfdmFsdWFibGUpKSB7XG5cdFx0dGhyb3cgSGVscGVyLmJhZFJlcXVpcmVtZW50cygpO1xuXHR9XG5cdGNvbnN0IEV2YWx1YXRvciA9IEhlbHBlci5hbGlhcyhUeXBlLmlzRnVuY3Rpb24pO1xuXHRjb25zdCBSZWlmaWNhdG9yID0gSGVscGVyLmFsaWFzKFR5cGUuaXNGdW5jdGlvbik7XG5cdGZ1bmN0aW9uIF9fa3NNYWluKCkge1xuXHRcdHJldHVybiBfX2tzTWFpbi5fX2tzX3J0KHRoaXMsIGFyZ3VtZW50cyk7XG5cdH07XG5cdF9fa3NNYWluLl9fa3NfMCA9IGZ1bmN0aW9uKGV2YWwsIF9fa3NfcmVpZmljYXRlLCBvdGhlcnMpIHtcblx0XHRsZXQgX19rc19zcmMgPSBcIlwiO1xuXHRcdF9fa3Nfc3JjICs9IFwiJ2dvdCBzb21ldGhpbmcgZWxzZSdcIjtcblx0XHRyZXR1cm4gX19rc19zcmM7XG5cdH07XG5cdF9fa3NNYWluLl9fa3NfcnQgPSBmdW5jdGlvbih0aGF0LCBhcmdzKSB7XG5cdFx0Y29uc3QgdDAgPSBUeXBlLmlzRnVuY3Rpb247XG5cdFx0Y29uc3QgdDEgPSBUeXBlLmlzRnVuY3Rpb247XG5cdFx0Y29uc3QgdDIgPSBUeXBlLmlzVmFsdWU7XG5cdFx0Y29uc3QgdGUgPSAocHRzLCBpZHgpID0+IEhlbHBlci5pc1VzaW5nQWxsQXJncyhhcmdzLCBwdHMsIGlkeCk7XG5cdFx0bGV0IHB0cztcblx0XHRpZihhcmdzLmxlbmd0aCA+PSAyKSB7XG5cdFx0XHRpZih0MChhcmdzWzBdKSAmJiB0MShhcmdzWzFdKSAmJiBIZWxwZXIuaXNWYXJhcmdzKGFyZ3MsIDAsIGFyZ3MubGVuZ3RoIC0gMiwgdDIsIHB0cyA9IFsyXSwgMCkgJiYgdGUocHRzLCAxKSkge1xuXHRcdFx0XHRyZXR1cm4gX19rc01haW4uX19rc18wLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSwgSGVscGVyLmdldFZhcmFyZ3MoYXJncywgMiwgcHRzWzFdKSk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHRocm93IEhlbHBlci5iYWRBcmdzKCk7XG5cdH07XG5cdHJldHVybiB7XG5cdFx0X19rc01haW5cblx0fTtcbn07In0="
      ]
    ]
  }
]