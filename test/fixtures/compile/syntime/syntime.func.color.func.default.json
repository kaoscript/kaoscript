[
  {
    "aliens": [
      "Any?",
      "$hex",
      true
    ],
    "requirements": [],
    "references": []
  },
  {
    "exports": [
      0,
      "Color"
    ],
    "references": [
      {
        "kind": "class",
        "abstract": false,
        "alien": false,
        "hybrid": false,
        "sealed": false,
        "system": false,
        "exhaustive": true,
        "auxiliary": true,
        "constructors": [],
        "instanceVariables": {
          "_alpha": {
            "access": 2,
            "type": "Number",
            "default": true,
            "final": false,
            "lateInit": false,
            "sealed": false
          },
          "_red": {
            "access": 2,
            "type": "Number",
            "default": true,
            "final": false,
            "lateInit": false,
            "sealed": false
          },
          "_green": {
            "access": 2,
            "type": "Number",
            "default": true,
            "final": false,
            "lateInit": false,
            "sealed": false
          },
          "_blue": {
            "access": 2,
            "type": "Number",
            "default": true,
            "final": false,
            "lateInit": false,
            "sealed": false
          }
        },
        "staticVariables": {},
        "instanceMethods": {
          "getField": [
            {
              "index": 0,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [
                {
                  "external": "name",
                  "internal": "name",
                  "type": "Any",
                  "min": 1,
                  "max": 1,
                  "default": false
                }
              ],
              "returns": "Any?",
              "errors": [],
              "inits": []
            }
          ],
          "setField": [
            {
              "index": 0,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [
                {
                  "external": "name",
                  "internal": "name",
                  "type": "Any",
                  "min": 1,
                  "max": 1,
                  "default": false
                },
                {
                  "external": "value",
                  "internal": "value",
                  "type": "Any",
                  "min": 1,
                  "max": 1,
                  "default": false
                }
              ],
              "returns": "Any?",
              "errors": [],
              "inits": []
            }
          ],
          "red": [
            {
              "index": 0,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [],
              "returns": "Any?",
              "errors": [],
              "inits": []
            },
            {
              "index": 1,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [
                {
                  "external": "value",
                  "internal": "value",
                  "type": "Any",
                  "min": 1,
                  "max": 1,
                  "default": false
                }
              ],
              "returns": "Any?",
              "errors": [],
              "inits": []
            }
          ],
          "green": [
            {
              "index": 0,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [],
              "returns": "Any?",
              "errors": [],
              "inits": []
            },
            {
              "index": 1,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [
                {
                  "external": "value",
                  "internal": "value",
                  "type": "Any",
                  "min": 1,
                  "max": 1,
                  "default": false
                }
              ],
              "returns": "Any?",
              "errors": [],
              "inits": []
            }
          ],
          "blue": [
            {
              "index": 0,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [],
              "returns": "Any?",
              "errors": [],
              "inits": []
            },
            {
              "index": 1,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [
                {
                  "external": "value",
                  "internal": "value",
                  "type": "Any",
                  "min": 1,
                  "max": 1,
                  "default": false
                }
              ],
              "returns": "Any?",
              "errors": [],
              "inits": []
            }
          ]
        },
        "staticMethods": {
          "addSpace": [
            {
              "index": 0,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [
                {
                  "external": "data",
                  "internal": "data",
                  "type": "Any",
                  "min": 1,
                  "max": 1,
                  "default": false
                }
              ],
              "returns": "Any?",
              "errors": [],
              "inits": []
            }
          ]
        },
        "sequences": [
          0,
          -1,
          -1
        ]
      }
    ],
    "macros": [
      "Color.registerSpace",
      [
        "eyJwYXJhbWV0ZXJzIjpbeyJraW5kIjo4MiwiYXR0cmlidXRlcyI6W10sIm1vZGlmaWVycyI6W10sImV4dGVybmFsIjp7ImtpbmQiOjQ3LCJtb2RpZmllcnMiOltdLCJuYW1lIjoiZXhwcmVzc2lvbiIsInN0YXJ0Ijp7ImxpbmUiOjEyLCJjb2x1bW4iOjI5fSwiZW5kIjp7ImxpbmUiOjEyLCJjb2x1bW4iOjM5fX0sImludGVybmFsIjp7ImtpbmQiOjQ3LCJtb2RpZmllcnMiOltdLCJuYW1lIjoiZXhwcmVzc2lvbiIsInN0YXJ0Ijp7ImxpbmUiOjEyLCJjb2x1bW4iOjI5fSwiZW5kIjp7ImxpbmUiOjEyLCJjb2x1bW4iOjM5fX0sInR5cGUiOnsia2luZCI6MTI3LCJtb2RpZmllcnMiOltdLCJ0eXBlTmFtZSI6eyJraW5kIjo0NywibW9kaWZpZXJzIjpbXSwibmFtZSI6Ik9iamVjdCIsInN0YXJ0Ijp7ImxpbmUiOjEyLCJjb2x1bW4iOjQxfSwiZW5kIjp7ImxpbmUiOjEyLCJjb2x1bW4iOjQ3fX0sInN0YXJ0Ijp7ImxpbmUiOjEyLCJjb2x1bW4iOjQxfSwiZW5kIjp7ImxpbmUiOjEyLCJjb2x1bW4iOjQ3fX0sInN0YXJ0Ijp7ImxpbmUiOjEyLCJjb2x1bW4iOjI5fSwiZW5kIjp7ImxpbmUiOjEyLCJjb2x1bW4iOjQ3fX1dLCJzb3VyY2UiOiIvLyBHZW5lcmF0ZWQgYnkga2Fvc2NyaXB0IDAuMTEuMFxuY29uc3Qge0hlbHBlciwgVHlwZX0gPSByZXF1aXJlKFwiQGthb3NjcmlwdC9ydW50aW1lXCIpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihfX2tzX01hcmtlciwgUG9zaXRpb24sIFJhbmdlLCBWZXJzaW9uRGF0YSwgTW9kaWZpZXJLaW5kLCBNb2RpZmllckRhdGEsIEFzdEtpbmQsIEFzdCwgT3BlcmF0b3JBdHRyaWJ1dGUsIE9wZXJhdG9yS2luZCwgSXRlcmF0aW9uS2luZCwgUmVzdHJpY3RpdmVPcGVyYXRvcktpbmQsIFVuYXJ5VHlwZU9wZXJhdG9yS2luZCwgQXNzaWdubWVudE9wZXJhdG9yS2luZCwgQmluYXJ5T3BlcmF0b3JLaW5kLCBVbmFyeU9wZXJhdG9yS2luZCwgQmluYXJ5T3BlcmF0b3JEYXRhLCBJdGVyYXRpb25EYXRhLCBSZXN0cmljdGl2ZU9wZXJhdG9yRGF0YSwgVW5hcnlPcGVyYXRvckRhdGEsIFVuYXJ5VHlwZU9wZXJhdG9yRGF0YSwgUXVvdGVFbGVtZW50S2luZCwgUmVpZmljYXRpb25LaW5kLCBRdW90ZUVsZW1lbnREYXRhLCBSZWlmaWNhdGlvbkRhdGEsIFNjb3BlS2luZCwgU2NvcGVEYXRhKSB7XG5cdHZhciBfX2tzXzBfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoUG9zaXRpb24pO1xuXHR2YXIgX19rc18xX3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKFJhbmdlKTtcblx0dmFyIF9fa3NfMl92YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShWZXJzaW9uRGF0YSk7XG5cdHZhciBfX2tzXzNfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoTW9kaWZpZXJLaW5kKTtcblx0dmFyIF9fa3NfNF92YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShNb2RpZmllckRhdGEpO1xuXHR2YXIgX19rc181X3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKEFzdEtpbmQpO1xuXHR2YXIgX19rc182X3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKEFzdCk7XG5cdHZhciBfX2tzXzdfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoT3BlcmF0b3JBdHRyaWJ1dGUpO1xuXHR2YXIgX19rc184X3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKE9wZXJhdG9yS2luZCk7XG5cdHZhciBfX2tzXzlfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoSXRlcmF0aW9uS2luZCk7XG5cdHZhciBfX2tzXzEwX3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKFJlc3RyaWN0aXZlT3BlcmF0b3JLaW5kKTtcblx0dmFyIF9fa3NfMTFfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoVW5hcnlUeXBlT3BlcmF0b3JLaW5kKTtcblx0dmFyIF9fa3NfMTJfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoQXNzaWdubWVudE9wZXJhdG9yS2luZCk7XG5cdHZhciBfX2tzXzEzX3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKEJpbmFyeU9wZXJhdG9yS2luZCk7XG5cdHZhciBfX2tzXzE0X3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKFVuYXJ5T3BlcmF0b3JLaW5kKTtcblx0dmFyIF9fa3NfMTVfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoQmluYXJ5T3BlcmF0b3JEYXRhKTtcblx0dmFyIF9fa3NfMTZfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoSXRlcmF0aW9uRGF0YSk7XG5cdHZhciBfX2tzXzE3X3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKFJlc3RyaWN0aXZlT3BlcmF0b3JEYXRhKTtcblx0dmFyIF9fa3NfMThfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoVW5hcnlPcGVyYXRvckRhdGEpO1xuXHR2YXIgX19rc18xOV92YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShVbmFyeVR5cGVPcGVyYXRvckRhdGEpO1xuXHR2YXIgX19rc18yMF92YWx1YWJsZSA9IFR5cGUuaXNWYWx1ZShRdW90ZUVsZW1lbnRLaW5kKTtcblx0dmFyIF9fa3NfMjFfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoUmVpZmljYXRpb25LaW5kKTtcblx0dmFyIF9fa3NfMjJfdmFsdWFibGUgPSBUeXBlLmlzVmFsdWUoUXVvdGVFbGVtZW50RGF0YSk7XG5cdHZhciBfX2tzXzIzX3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKFJlaWZpY2F0aW9uRGF0YSk7XG5cdHZhciBfX2tzXzI0X3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKFNjb3BlS2luZCk7XG5cdHZhciBfX2tzXzI1X3ZhbHVhYmxlID0gVHlwZS5pc1ZhbHVlKFNjb3BlRGF0YSk7XG5cdGlmKCFfX2tzXzBfdmFsdWFibGUgJiYgIV9fa3NfMV92YWx1YWJsZSAmJiAhX19rc18yX3ZhbHVhYmxlICYmICFfX2tzXzNfdmFsdWFibGUgJiYgIV9fa3NfNF92YWx1YWJsZSAmJiAhX19rc181X3ZhbHVhYmxlICYmICFfX2tzXzZfdmFsdWFibGUgJiYgIV9fa3NfN192YWx1YWJsZSAmJiAhX19rc184X3ZhbHVhYmxlICYmICFfX2tzXzlfdmFsdWFibGUgJiYgIV9fa3NfMTBfdmFsdWFibGUgJiYgIV9fa3NfMTFfdmFsdWFibGUgJiYgIV9fa3NfMTJfdmFsdWFibGUgJiYgIV9fa3NfMTNfdmFsdWFibGUgJiYgIV9fa3NfMTRfdmFsdWFibGUgJiYgIV9fa3NfMTVfdmFsdWFibGUgJiYgIV9fa3NfMTZfdmFsdWFibGUgJiYgIV9fa3NfMTdfdmFsdWFibGUgJiYgIV9fa3NfMThfdmFsdWFibGUgJiYgIV9fa3NfMTlfdmFsdWFibGUgJiYgIV9fa3NfMjBfdmFsdWFibGUgJiYgIV9fa3NfMjFfdmFsdWFibGUgJiYgIV9fa3NfMjJfdmFsdWFibGUgJiYgIV9fa3NfMjNfdmFsdWFibGUgJiYgIV9fa3NfMjRfdmFsdWFibGUgJiYgIV9fa3NfMjVfdmFsdWFibGUpIHtcblx0XHR2YXIge1Bvc2l0aW9uLCBSYW5nZSwgVmVyc2lvbkRhdGEsIE1vZGlmaWVyS2luZCwgTW9kaWZpZXJEYXRhLCBBc3RLaW5kLCBBc3QsIE9wZXJhdG9yQXR0cmlidXRlLCBPcGVyYXRvcktpbmQsIEl0ZXJhdGlvbktpbmQsIFJlc3RyaWN0aXZlT3BlcmF0b3JLaW5kLCBVbmFyeVR5cGVPcGVyYXRvcktpbmQsIEFzc2lnbm1lbnRPcGVyYXRvcktpbmQsIEJpbmFyeU9wZXJhdG9yS2luZCwgVW5hcnlPcGVyYXRvcktpbmQsIEJpbmFyeU9wZXJhdG9yRGF0YSwgSXRlcmF0aW9uRGF0YSwgUmVzdHJpY3RpdmVPcGVyYXRvckRhdGEsIFVuYXJ5T3BlcmF0b3JEYXRhLCBVbmFyeVR5cGVPcGVyYXRvckRhdGEsIFF1b3RlRWxlbWVudEtpbmQsIFJlaWZpY2F0aW9uS2luZCwgUXVvdGVFbGVtZW50RGF0YSwgUmVpZmljYXRpb25EYXRhLCBTY29wZUtpbmQsIFNjb3BlRGF0YX0gPSByZXF1aXJlKFwiQGthb3NjcmlwdC9hc3Qvc3JjLy5pbmRleC5rcy5qNWs4cjkua3NiXCIpKCk7XG5cdH1cblx0ZWxzZSBpZighKF9fa3NfMF92YWx1YWJsZSB8fCBfX2tzXzFfdmFsdWFibGUgfHwgX19rc18yX3ZhbHVhYmxlIHx8IF9fa3NfM192YWx1YWJsZSB8fCBfX2tzXzRfdmFsdWFibGUgfHwgX19rc181X3ZhbHVhYmxlIHx8IF9fa3NfNl92YWx1YWJsZSB8fCBfX2tzXzdfdmFsdWFibGUgfHwgX19rc184X3ZhbHVhYmxlIHx8IF9fa3NfOV92YWx1YWJsZSB8fCBfX2tzXzEwX3ZhbHVhYmxlIHx8IF9fa3NfMTFfdmFsdWFibGUgfHwgX19rc18xMl92YWx1YWJsZSB8fCBfX2tzXzEzX3ZhbHVhYmxlIHx8IF9fa3NfMTRfdmFsdWFibGUgfHwgX19rc18xNV92YWx1YWJsZSB8fCBfX2tzXzE2X3ZhbHVhYmxlIHx8IF9fa3NfMTdfdmFsdWFibGUgfHwgX19rc18xOF92YWx1YWJsZSB8fCBfX2tzXzE5X3ZhbHVhYmxlIHx8IF9fa3NfMjBfdmFsdWFibGUgfHwgX19rc18yMV92YWx1YWJsZSB8fCBfX2tzXzIyX3ZhbHVhYmxlIHx8IF9fa3NfMjNfdmFsdWFibGUgfHwgX19rc18yNF92YWx1YWJsZSB8fCBfX2tzXzI1X3ZhbHVhYmxlKSkge1xuXHRcdHRocm93IEhlbHBlci5iYWRSZXF1aXJlbWVudHMoKTtcblx0fVxuXHRjb25zdCBFdmFsdWF0b3IgPSBIZWxwZXIuYWxpYXMoVHlwZS5pc0Z1bmN0aW9uKTtcblx0Y29uc3QgUmVpZmljYXRvciA9IEhlbHBlci5hbGlhcyhUeXBlLmlzRnVuY3Rpb24pO1xuXHRmdW5jdGlvbiBfX2tzTWFpbigpIHtcblx0XHRyZXR1cm4gX19rc01haW4uX19rc19ydCh0aGlzLCBhcmd1bWVudHMpO1xuXHR9O1xuXHRfX2tzTWFpbi5fX2tzXzAgPSBmdW5jdGlvbihldmFsLCBfX2tzX3JlaWZpY2F0ZSwgZXhwcmVzc2lvbikge1xuXHRcdGV4cHJlc3Npb24gPSBIZWxwZXIuYXNzZXJ0KGV2YWwoZXhwcmVzc2lvbiksIFwiXFxcIkFueVxcXCJcIiwgMCwgVHlwZS5pc1ZhbHVlKTtcblx0XHRsZXQgX19rc19zcmMgPSBcIlwiO1xuXHRcdGlmKFR5cGUuaXNWYWx1ZShleHByZXNzaW9uLmNvbXBvbmVudHMpKSB7XG5cdFx0XHRjb25zdCBmaWVsZHMgPSBbXTtcblx0XHRcdGNvbnN0IG1ldGhvZHMgPSBbXTtcblx0XHRcdGxldCBmaWVsZDtcblx0XHRcdGZvcihjb25zdCBuYW1lIGluIGV4cHJlc3Npb24uY29tcG9uZW50cykge1xuXHRcdFx0XHRjb25zdCBjb21wb25lbnQgPSBleHByZXNzaW9uLmNvbXBvbmVudHNbbmFtZV07XG5cdFx0XHRcdGZpZWxkID0gXCJfXCIgKyBuYW1lO1xuXHRcdFx0XHRmaWVsZHMucHVzaChIZWxwZXIuY29uY2F0U3RyaW5nKFwicHJpdmF0ZSBcIiwgX19rc19yZWlmaWNhdGUoZmllbGQsIGZhbHNlLCBSZWlmaWNhdGlvbktpbmQuV3JpdGUpLCBcIjogTnVtYmVyID0gMFwiKSk7XG5cdFx0XHRcdG1ldGhvZHMucHVzaChIZWxwZXIuY29uY2F0U3RyaW5nKF9fa3NfcmVpZmljYXRlKG5hbWUsIGZhbHNlLCBSZWlmaWNhdGlvbktpbmQuV3JpdGUpLCBcIigpID0+IHRoaXMuZ2V0RmllbGQoXCIsIF9fa3NfcmVpZmljYXRlKG5hbWUsIG51bGwsIFJlaWZpY2F0aW9uS2luZC5FeHByZXNzaW9uKSwgXCIpXCIsIFwiXFxuXCIsIF9fa3NfcmVpZmljYXRlKG5hbWUsIGZhbHNlLCBSZWlmaWNhdGlvbktpbmQuV3JpdGUpLCBcIih2YWx1ZSkgPT4gdGhpcy5zZXRGaWVsZChcIiwgX19rc19yZWlmaWNhdGUobmFtZSwgbnVsbCwgUmVpZmljYXRpb25LaW5kLkV4cHJlc3Npb24pLCBcIiwgdmFsdWUpXCIsIFwiXFxuXCIpKTtcblx0XHRcdFx0ZXhwcmVzc2lvbi5jb21wb25lbnRzW25hbWVdLmZpZWxkID0gZmllbGQ7XG5cdFx0XHR9XG5cdFx0XHRfX2tzX3NyYyArPSBIZWxwZXIuY29uY2F0U3RyaW5nKFwiQ29sb3IuYWRkU3BhY2UoXCIsIF9fa3NfcmVpZmljYXRlKGV4cHJlc3Npb24sIG51bGwsIFJlaWZpY2F0aW9uS2luZC5FeHByZXNzaW9uKSwgXCIpXCIsIFwiXFxuXCIsIFwiXFxuXCIsIFwiaW1wbCBDb2xvciB7XCIsIFwiXFxuXCIsIF9fa3NfcmVpZmljYXRlKGZpZWxkcywgZmFsc2UsIFJlaWZpY2F0aW9uS2luZC5TdGF0ZW1lbnQpLCBcIlxcblwiLCBfX2tzX3JlaWZpY2F0ZShtZXRob2RzLCBmYWxzZSwgUmVpZmljYXRpb25LaW5kLlN0YXRlbWVudCksIFwiXFxuXCIsIFwifVwiLCBcIlxcblwiKTtcblx0XHR9XG5cdFx0ZWxzZSB7XG5cdFx0XHRfX2tzX3NyYyArPSBIZWxwZXIuY29uY2F0U3RyaW5nKFwiQ29sb3IuYWRkU3BhY2UoXCIsIF9fa3NfcmVpZmljYXRlKGV4cHJlc3Npb24sIG51bGwsIFJlaWZpY2F0aW9uS2luZC5FeHByZXNzaW9uKSwgXCIpXCIpO1xuXHRcdH1cblx0XHRyZXR1cm4gX19rc19zcmM7XG5cdH07XG5cdF9fa3NNYWluLl9fa3NfcnQgPSBmdW5jdGlvbih0aGF0LCBhcmdzKSB7XG5cdFx0Y29uc3QgdDAgPSBUeXBlLmlzRnVuY3Rpb247XG5cdFx0Y29uc3QgdDEgPSBUeXBlLmlzRnVuY3Rpb247XG5cdFx0Y29uc3QgdDIgPSBUeXBlLmlzVmFsdWU7XG5cdFx0aWYoYXJncy5sZW5ndGggPT09IDMpIHtcblx0XHRcdGlmKHQwKGFyZ3NbMF0pICYmIHQxKGFyZ3NbMV0pICYmIHQyKGFyZ3NbMl0pKSB7XG5cdFx0XHRcdHJldHVybiBfX2tzTWFpbi5fX2tzXzAuY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0dGhyb3cgSGVscGVyLmJhZEFyZ3MoKTtcblx0fTtcblx0cmV0dXJuIHtcblx0XHRfX2tzTWFpblxuXHR9O1xufTsifQ=="
      ]
    ]
  }
]