[
  {
    "aliens": [
      "Any?",
      "$hex",
      true
    ],
    "requirements": [],
    "references": []
  },
  {
    "exports": [
      0,
      "Color"
    ],
    "references": [
      {
        "kind": "class",
        "abstract": false,
        "alien": false,
        "hybrid": false,
        "sealed": false,
        "system": false,
        "exhaustive": true,
        "auxiliary": true,
        "constructors": [],
        "instanceVariables": {
          "_alpha": {
            "access": 2,
            "type": "Number",
            "default": true,
            "final": false,
            "lateInit": false,
            "sealed": false
          },
          "_red": {
            "access": 2,
            "type": "Number",
            "default": true,
            "final": false,
            "lateInit": false,
            "sealed": false
          },
          "_green": {
            "access": 2,
            "type": "Number",
            "default": true,
            "final": false,
            "lateInit": false,
            "sealed": false
          },
          "_blue": {
            "access": 2,
            "type": "Number",
            "default": true,
            "final": false,
            "lateInit": false,
            "sealed": false
          }
        },
        "staticVariables": {},
        "instanceMethods": {
          "getField": [
            {
              "index": 0,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [
                {
                  "external": "name",
                  "internal": "name",
                  "type": "Any",
                  "min": 1,
                  "max": 1,
                  "default": false
                }
              ],
              "returns": "Any?",
              "errors": [],
              "inits": []
            }
          ],
          "setField": [
            {
              "index": 0,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [
                {
                  "external": "name",
                  "internal": "name",
                  "type": "Any",
                  "min": 1,
                  "max": 1,
                  "default": false
                },
                {
                  "external": "value",
                  "internal": "value",
                  "type": "Any",
                  "min": 1,
                  "max": 1,
                  "default": false
                }
              ],
              "returns": "Any?",
              "errors": [],
              "inits": []
            }
          ],
          "red": [
            {
              "index": 0,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [],
              "returns": "Any?",
              "errors": [],
              "inits": []
            },
            {
              "index": 1,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [
                {
                  "external": "value",
                  "internal": "value",
                  "type": "Any",
                  "min": 1,
                  "max": 1,
                  "default": false
                }
              ],
              "returns": "Any?",
              "errors": [],
              "inits": []
            }
          ],
          "green": [
            {
              "index": 0,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [],
              "returns": "Any?",
              "errors": [],
              "inits": []
            },
            {
              "index": 1,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [
                {
                  "external": "value",
                  "internal": "value",
                  "type": "Any",
                  "min": 1,
                  "max": 1,
                  "default": false
                }
              ],
              "returns": "Any?",
              "errors": [],
              "inits": []
            }
          ],
          "blue": [
            {
              "index": 0,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [],
              "returns": "Any?",
              "errors": [],
              "inits": []
            },
            {
              "index": 1,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [
                {
                  "external": "value",
                  "internal": "value",
                  "type": "Any",
                  "min": 1,
                  "max": 1,
                  "default": false
                }
              ],
              "returns": "Any?",
              "errors": [],
              "inits": []
            }
          ]
        },
        "staticMethods": {
          "addSpace": [
            {
              "index": 0,
              "access": 4,
              "sealed": false,
              "async": false,
              "parameters": [
                {
                  "external": "data",
                  "internal": "data",
                  "type": "Any",
                  "min": 1,
                  "max": 1,
                  "default": false
                }
              ],
              "returns": "Any?",
              "errors": [],
              "inits": []
            }
          ]
        },
        "sequences": [
          0,
          -1,
          -1
        ]
      }
    ],
    "macros": [
      "Color.registerSpace",
      [
        "eyJwYXJhbWV0ZXJzIjpbeyJraW5kIjo4MywiYXR0cmlidXRlcyI6W10sIm1vZGlmaWVycyI6W3sia2luZCI6Niwic3RhcnQiOnsibGluZSI6MTIsImNvbHVtbiI6MjJ9LCJlbmQiOnsibGluZSI6MTIsImNvbHVtbiI6MjN9fV0sImV4dGVybmFsIjp7ImtpbmQiOjQ3LCJtb2RpZmllcnMiOltdLCJuYW1lIjoiZXhwcmVzc2lvbiIsInN0YXJ0Ijp7ImxpbmUiOjEyLCJjb2x1bW4iOjIzfSwiZW5kIjp7ImxpbmUiOjEyLCJjb2x1bW4iOjMzfX0sImludGVybmFsIjp7ImtpbmQiOjQ3LCJtb2RpZmllcnMiOltdLCJuYW1lIjoiZXhwcmVzc2lvbiIsInN0YXJ0Ijp7ImxpbmUiOjEyLCJjb2x1bW4iOjIzfSwiZW5kIjp7ImxpbmUiOjEyLCJjb2x1bW4iOjMzfX0sInR5cGUiOnsia2luZCI6MTIzLCJtb2RpZmllcnMiOltdLCJ0eXBlTmFtZSI6eyJraW5kIjo0NywibW9kaWZpZXJzIjpbXSwibmFtZSI6Ik9iamVjdCIsInN0YXJ0Ijp7ImxpbmUiOjEyLCJjb2x1bW4iOjM1fSwiZW5kIjp7ImxpbmUiOjEyLCJjb2x1bW4iOjQxfX0sInN0YXJ0Ijp7ImxpbmUiOjEyLCJjb2x1bW4iOjM1fSwiZW5kIjp7ImxpbmUiOjEyLCJjb2x1bW4iOjQxfX0sInN0YXJ0Ijp7ImxpbmUiOjEyLCJjb2x1bW4iOjIyfSwiZW5kIjp7ImxpbmUiOjEyLCJjb2x1bW4iOjQxfX1dLCJzb3VyY2UiOiIvLyBHZW5lcmF0ZWQgYnkga2Fvc2NyaXB0IDAuMTEuMFxuY29uc3Qge0hlbHBlciwgVHlwZX0gPSByZXF1aXJlKFwiQGthb3NjcmlwdC9ydW50aW1lXCIpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihfX2tzX21hcmtlcikge1xuXHRyZXR1cm4gSGVscGVyLmZ1bmN0aW9uKGZ1bmN0aW9uKF9fa3NfYXV0bywgX19rc19yZWlmaWNhdGUsIGV4cHJlc3Npb24pIHtcblx0XHRleHByZXNzaW9uID0gSGVscGVyLmFzc2VydChfX2tzX2F1dG8oZXhwcmVzc2lvbiksIFwiXFxcIkFueVxcXCJcIiwgMCwgVHlwZS5pc1ZhbHVlKTtcblx0XHRsZXQgX19rc19zcmMgPSBcIlwiO1xuXHRcdGlmKFR5cGUuaXNWYWx1ZShleHByZXNzaW9uLmNvbXBvbmVudHMpKSB7XG5cdFx0XHRjb25zdCBmaWVsZHMgPSBbXTtcblx0XHRcdGNvbnN0IG1ldGhvZHMgPSBbXTtcblx0XHRcdGxldCBmaWVsZDtcblx0XHRcdGZvcihjb25zdCBuYW1lIGluIGV4cHJlc3Npb24uY29tcG9uZW50cykge1xuXHRcdFx0XHRjb25zdCBjb21wb25lbnQgPSBleHByZXNzaW9uLmNvbXBvbmVudHNbbmFtZV07XG5cdFx0XHRcdGZpZWxkID0gXCJfXCIgKyBuYW1lO1xuXHRcdFx0XHRmaWVsZHMucHVzaChIZWxwZXIuY29uY2F0U3RyaW5nKFwicHJpdmF0ZSBcIiwgX19rc19yZWlmaWNhdGUoZmllbGQsIGZhbHNlLCA1KSwgXCI6IE51bWJlciA9IDBcIikpO1xuXHRcdFx0XHRtZXRob2RzLnB1c2goSGVscGVyLmNvbmNhdFN0cmluZyhfX2tzX3JlaWZpY2F0ZShuYW1lLCBmYWxzZSwgNSksIFwiKCkgPT4gdGhpcy5nZXRGaWVsZChcIiwgX19rc19yZWlmaWNhdGUobmFtZSwgZmFsc2UsIDIpLCBcIilcIiwgXCJcXG5cIiwgX19rc19yZWlmaWNhdGUobmFtZSwgZmFsc2UsIDUpLCBcIih2YWx1ZSkgPT4gdGhpcy5zZXRGaWVsZChcIiwgX19rc19yZWlmaWNhdGUobmFtZSwgZmFsc2UsIDIpLCBcIiwgdmFsdWUpXCIsIFwiXFxuXCIpKTtcblx0XHRcdFx0ZXhwcmVzc2lvbi5jb21wb25lbnRzW25hbWVdLmZpZWxkID0gZmllbGQ7XG5cdFx0XHR9XG5cdFx0XHRfX2tzX3NyYyArPSBIZWxwZXIuY29uY2F0U3RyaW5nKFwiQ29sb3IuYWRkU3BhY2UoXCIsIF9fa3NfcmVpZmljYXRlKGV4cHJlc3Npb24sIGZhbHNlLCAyKSwgXCIpXCIsIFwiXFxuXCIsIFwiXFxuXCIsIFwiaW1wbCBDb2xvciB7XCIsIFwiXFxuXCIsIF9fa3NfcmVpZmljYXRlKGZpZWxkcywgZmFsc2UsIDQpLCBcIlxcblwiLCBfX2tzX3JlaWZpY2F0ZShtZXRob2RzLCBmYWxzZSwgNCksIFwiXFxuXCIsIFwifVwiLCBcIlxcblwiKTtcblx0XHR9XG5cdFx0ZWxzZSB7XG5cdFx0XHRfX2tzX3NyYyArPSBIZWxwZXIuY29uY2F0U3RyaW5nKFwiQ29sb3IuYWRkU3BhY2UoXCIsIF9fa3NfcmVpZmljYXRlKGV4cHJlc3Npb24sIGZhbHNlLCAyKSwgXCIpXCIpO1xuXHRcdH1cblx0XHRyZXR1cm4gX19rc19zcmM7XG5cdH0sICh0aGF0LCBmbiwgLi4uYXJncykgPT4ge1xuXHRcdGNvbnN0IHQwID0gVHlwZS5pc1ZhbHVlO1xuXHRcdGlmKGFyZ3MubGVuZ3RoID09PSAzKSB7XG5cdFx0XHRpZih0MChhcmdzWzBdKSAmJiB0MChhcmdzWzFdKSAmJiB0MChhcmdzWzJdKSkge1xuXHRcdFx0XHRyZXR1cm4gZm4uY2FsbChudWxsLCBhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0dGhyb3cgSGVscGVyLmJhZEFyZ3MoKTtcblx0fSk7XG59OyJ9"
      ]
    ]
  }
]