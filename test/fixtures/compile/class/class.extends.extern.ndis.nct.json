{
  "aliens": [
    0,
    "Error"
  ],
  "requirements": [],
  "exports": [
    0,
    "Error",
    1,
    "FooError"
  ],
  "references": [
    {
      "kind": "class",
      "abstract": false,
      "alien": true,
      "hybrid": false,
      "sealed": true,
      "systemic": true,
      "exhaustive": true,
      "constructors": [],
      "instanceVariables": {
        "message": {
          "access": 4,
          "type": "String",
          "default": false,
          "immutable": false,
          "lateInit": false,
          "sealed": false
        },
        "name": {
          "access": 4,
          "type": "String",
          "default": false,
          "immutable": false,
          "lateInit": false,
          "sealed": false
        }
      },
      "classVariables": {},
      "instanceMethods": {
        "toString": [
          {
            "id": 0,
            "access": 4,
            "sealed": false,
            "async": false,
            "min": 0,
            "max": 0,
            "parameters": [],
            "returns": "String",
            "throws": [],
            "inits": []
          }
        ]
      },
      "classMethods": {},
      "sequences": [
        -1,
        -1,
        -1
      ],
      "sharedMethods": {}
    },
    {
      "kind": "class",
      "abstract": false,
      "alien": false,
      "hybrid": true,
      "sealed": false,
      "systemic": false,
      "exhaustive": true,
      "constructors": [],
      "instanceVariables": {},
      "classVariables": {},
      "instanceMethods": {
        "toString": [
          {
            "id": 0,
            "access": 4,
            "sealed": false,
            "async": false,
            "min": 0,
            "max": 0,
            "parameters": [],
            "returns": "String",
            "throws": [],
            "inits": []
          }
        ]
      },
      "classMethods": {},
      "extends": [
        0,
        "Error"
      ],
      "sequences": [
        -1,
        -1,
        -1
      ]
    }
  ],
  "macros": []
}